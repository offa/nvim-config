" Modeline and Notes {
" vim: set sw=4 ts=4 sts=4 et tw=78 foldmarker={,} foldlevel=0 foldmethod=marker spell:
"
" Copyright 2016-2021 offa
" Copyright 2014 Steve Francia
"
" Licensed under the Apache License, Version 2.0 (the "License");
" you may not use this file except in compliance with the License.
" You may obtain a copy of the License at
"
"     http://www.apache.org/licenses/LICENSE-2.0
"
" Unless required by applicable law or agreed to in writing, software
" distributed under the License is distributed on an "AS IS" BASIS,
" WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
" See the License for the specific language governing permissions and
" limitations under the License.
" }

" Environment {

    " Basics {
        set nocompatible        " Must be first line
        set background=dark     " Assume a dark background
    " }

    " Windows Compatible {
        " On Windows, also use '.vim' instead of 'vimfiles'; this makes synchronization
        " across (heterogeneous) systems easier.
        if has('win32') || has('win64')
          set runtimepath=$HOME/.vim,$VIM/vimfiles,$VIMRUNTIME,$VIM/vimfiles/after,$HOME/.vim/after

          " Be nice and check for multi_byte even if the config requires
          " multi_byte support most of the time
          if has("multi_byte")
            " Windows cmd.exe still uses cp850. If Windows ever moved to
            " Powershell as the primary terminal, this would be utf-8
            set termencoding=cp850
            " Let Vim use utf-8 internally, because many scripts require this
            set encoding=utf-8
            setglobal fileencoding=utf-8
            " Windows has traditionally used cp1252, so it's probably wise to
            " fallback into cp1252 instead of eg. iso-8859-15.
            " Newer Windows files might contain utf-8 or utf-16 LE so we might
            " want to try them first.
            set fileencodings=ucs-bom,utf-8,utf-16le,cp1252,iso-8859-15
          endif
        endif
    " }

" }

" Plugins {
    call plug#begin('~/.vim/plugged')

    " In your .vimrc.before.local file
    " list only the plugin groups you will use
    if !exists('g:spf13_bundle_groups')
        let g:spf13_bundle_groups=['general', 'writing', 'deoplete', 'programming', 'c_cpp', 'python', ]
    endif

    " To override all the included bundles, add the following to your
    " .vimrc.bundles.local file:
    "   let g:override_spf13_bundles = 1
    if !exists("g:override_spf13_bundles")

    " General {
        if count(g:spf13_bundle_groups, 'general')
            " Themes
            Plug 'joshdick/onedark.vim'
            Plug 'gruvbox-community/gruvbox'

            " Airline
            Plug 'vim-airline/vim-airline'
            Plug 'vim-airline/vim-airline-themes'

            Plug 'raviqqe/vim-nonblank'
            Plug 'roman/golden-ratio'
            Plug 'RRethy/vim-illuminate'
            Plug 'jeetsukumaran/vim-buffergator'
            Plug 'scrooloose/nerdtree'
            Plug 'tpope/vim-surround'
            Plug 'tpope/vim-repeat'
            Plug 'rhysd/conflict-marker.vim'
            Plug 'windwp/nvim-autopairs'
            Plug 'ctrlpvim/ctrlp.vim'
            Plug 'tacahiroy/ctrlp-funky'
            Plug 'terryma/vim-multiple-cursors'
            Plug 'vim-scripts/sessionman.vim'
            Plug 'easymotion/vim-easymotion'
            Plug 'jistr/vim-nerdtree-tabs'
            Plug 'mbbill/undotree'
            Plug 'lukas-reineke/indent-blankline.nvim'
            if !exists('g:spf13_no_views')
                Plug 'vim-scripts/restore_view.vim'
            endif
            Plug 'mhinz/vim-signify'
            Plug 'tpope/vim-abolish'
            Plug 'osyo-manga/vim-over'
            Plug 'kana/vim-textobj-user'
            Plug 'kana/vim-textobj-indent'
            Plug 'gcmt/wildfire.vim'
            Plug 'ervandew/supertab'
            Plug 'gelguy/wilder.nvim', { 'do': ':UpdateRemotePlugins' }
            Plug 'kevinhwang91/nvim-hlslens'
        endif
    " }

    " Writing {
        if count(g:spf13_bundle_groups, 'writing')
            Plug 'reedes/vim-litecorrect'
            Plug 'reedes/vim-textobj-sentence'
            Plug 'reedes/vim-textobj-quote'
            Plug 'reedes/vim-wordy'
        endif
    " }

    " General Programming {
        if count(g:spf13_bundle_groups, 'programming')
            Plug 'dense-analysis/ale'
            Plug 'tpope/vim-fugitive'
            Plug 'scrooloose/nerdcommenter'
            Plug 'godlygeek/tabular'
            Plug 'luochen1990/rainbow'
            Plug 'sbdchd/neoformat'
            if executable('ctags')
                Plug 'majutsushi/tagbar'
            endif
            Plug 'sheerun/vim-polyglot'
            Plug 'alvan/vim-closetag'
            Plug 'neovim/nvim-lspconfig'
            Plug 'rhysd/vim-lsp-ale'
        endif
    " }

    " Snippets & AutoComplete {
        if count(g:spf13_bundle_groups, 'deoplete')
            Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
            Plug 'deoplete-plugins/deoplete-lsp'
            Plug 'Shougo/neosnippet'
            Plug 'Shougo/neosnippet-snippets'
            Plug 'honza/vim-snippets'
        endif
    " }

    " C / C++ {
        if count(g:spf13_bundle_groups, 'c_cpp')
            Plug 'octol/vim-cpp-enhanced-highlight'
            Plug 'pboettch/vim-cmake-syntax'
        endif
    " }

    " Python {
        if count(g:spf13_bundle_groups, 'python')
            Plug 'vim-scripts/python_match.vim'
        endif
    " }

    " Javascript {
        if count(g:spf13_bundle_groups, 'javascript')
            Plug 'elzr/vim-json'
            Plug 'groenewege/vim-less'
            Plug 'pangloss/vim-javascript'
            Plug 'briancollins/vim-jst'
            Plug 'kchmck/vim-coffee-script'
        endif
    " }

    " HTML {
        if count(g:spf13_bundle_groups, 'html')
            Plug 'hail2u/vim-css3-syntax'
            Plug 'gorodinskiy/vim-coloresque'
            Plug 'tpope/vim-haml'
            Plug 'mattn/emmet-vim'
        endif
    " }

    " Latex {
        if count(g:spf13_bundle_groups, 'latex')
            Plug 'lervag/vimtex'
        endif
    " }

    endif

    " Use local bundles config if available {
        if filereadable(expand("~/.vimrc.bundles.local"))
            source ~/.vimrc.bundles.local
        endif
    " }

    call plug#end()

" }
